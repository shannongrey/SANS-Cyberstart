HQL12C04 Change of Plan

Our Agent on the inside has just received an email from one of the senior gang members. We think it's regarding a date being set for when the robot should arrive at the banks address - it's our belief that they know we are into them and so they would like to speed up their efforts in sending the robot to the bank!

We really need to confirm the exact date they want to send it, but at the moment we can't because the email came in the form of some encrypted text. We've had an agent working on it, and he's created a dictionary file and an unfinished Python script to try and crack it. He seems to have hit a dead end, maybe you could pick it up and finish breaking the encryption.

Tip: Crack the encryption to get the flag.

from Crypto.Cipher import AES
import base64
import os

def decrypt(a):
    BLOCK_SIZE = 32

    PADDING = '{'

    # Encrypted text to decrypt
    encrypted = "xpd4OA7GZYDfn4lTMJW/EEqgp26BlgjxsTonc1Elcgo="

    DecodeAES = lambda c, e: c.decrypt(base64.b64decode(e)).rstrip(PADDING)

    secret = a

    if (secret[-1:] == "\n"):
        print "Error, new line character at the end of the string. This will not match!"
    elif (len(secret) >= 32):
        print "Error, string too long. Must be less than 32 characters."
    else:
        # create a cipher object using the secret
        cipher = AES.new(secret + (BLOCK_SIZE - len(secret) % BLOCK_SIZE) * PADDING)

        # decode the encoded string
        decoded = DecodeAES(cipher, encrypted)
        try:
                decoded.decode('ascii')
        except UnicodeDecodeError:
                pass
        else:
                print decoded

with open("/home/agent/Downloads/words.txt", "r") as myfile:
    for line in myfile:
        s = line
        s = s.strip()
        decrypt(s)


flag: iQmDIXlDT7N2YgReCOM
